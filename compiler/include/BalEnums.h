#ifndef __BALINSTRUCTIONKIND__H__
#define __BALINSTRUCTIONKIND__H__

namespace nballerina {

// TODO move to BIRReader and don't use it in codegen classes
enum InstructionKind {
  INSTRUCTION_KIND_GOTO = 1,
  INSTRUCTION_KIND_CALL = 2,
  INSTRUCTION_KIND_CONDITIONAL_BRANCH = 3,
  INSTRUCTION_KIND_RETURN = 4,
  INSTRUCTION_KIND_BINARY_REF_EQUAL,
  INSTRUCTION_KIND_BINARY_REF_NOT_EQUAL,
  INSTRUCTION_KIND_BINARY_CLOSED_RANGE,
  INSTRUCTION_KIND_BINARY_HALF_OPEN_RANGE,
  INSTRUCTION_KIND_BINARY_ANNOT_ACCESS,
  INSTRUCTION_KIND_BINARY_BITWISE_AND,
  INSTRUCTION_KIND_BINARY_BITWISE_OR,
  INSTRUCTION_KIND_BINARY_BITWISE_LEFT_SHIFT,
  INSTRUCTION_KIND_MOVE = 20,
  INSTRUCTION_KIND_CONST_LOAD = 21,
  INSTRUCTION_KIND_NEW_STRUCTURE,
  INSTRUCTION_KIND_MAP_STORE = 23,
  INSTRUCTION_KIND_NEW_ARRAY = 25,
  INSTRUCTION_KIND_ARRAY_STORE = 26,
  INSTRUCTION_KIND_ARRAY_LOAD = 27,
  INSTRUCTION_KIND_TYPE_CAST = 29,
  INSTRUCTION_KIND_TYPE_TEST = 31,
  INSTRUCTION_KIND_NEW_TYPEDESC = 52,
  INSTRUCTION_KIND_BINARY_ADD = 61,
  INSTRUCTION_KIND_BINARY_SUB,
  INSTRUCTION_KIND_BINARY_MUL,
  INSTRUCTION_KIND_BINARY_DIV,
  INSTRUCTION_KIND_BINARY_MOD,
  INSTRUCTION_KIND_BINARY_EQUAL = 66,
  INSTRUCTION_KIND_BINARY_NOT_EQUAL = 67,
  INSTRUCTION_KIND_BINARY_GREATER_THAN = 68,
  INSTRUCTION_KIND_BINARY_GREATER_EQUAL = 69,
  INSTRUCTION_KIND_BINARY_LESS_THAN = 70,
  INSTRUCTION_KIND_BINARY_LESS_EQUAL = 71,
  INSTRUCTION_KIND_UNARY_NOT = 81,
  INSTRUCTION_KIND_UNARY_NEG,
  INSTRUCTION_KIND_BINARY_BITWISE_XOR = 85,
  INSTRUCTION_KIND_BINARY_BITWISE_UNSIGNED_RIGHT_SHIFT
}; // Enums are referred from bir-model.bal file

enum TypeTagEnum {
  TYPE_TAG_INT = 1,
  TYPE_TAG_BYTE = 2,
  TYPE_TAG_FLOAT = 3,
  TYPE_TAG_DECIMAL = 4,
  TYPE_TAG_STRING = 5,
  TYPE_TAG_BOOLEAN = 6,
  TYPE_TAG_JSON = 7,
  TYPE_TAG_XML = 8,
  TYPE_TAG_TABLE = 9,
  TYPE_TAG_NIL = 10,
  TYPE_TAG_ANYDATA = 11,
  TYPE_TAG_RECORD = 12,
  TYPE_TAG_TYPEDESC = 13,
  TYPE_TAG_STREAM = 14,
  TYPE_TAG_MAP = 15,
  TYPE_TAG_INVOKABLE = 16,
  TYPE_TAG_ANY = 17,
  TYPE_TAG_ENDPOINT = 18,
  TYPE_TAG_ARRAY = 19,
  TYPE_TAG_UNION = 20,
  TYPE_TAG_INTERSECTION = 21,
  TYPE_TAG_PACKAGE = 22,
  TYPE_TAG_NONE = 23,
  TYPE_TAG_VOID = 24,
  TYPE_TAG_XMLNS = 25,
  TYPE_TAG_ANNOTATION = 26,
  TYPE_TAG_SEMANTIC_ERROR = 27,
  TYPE_TAG_ERROR = 28,
  TYPE_TAG_ITERATOR = 29,
  TYPE_TAG_TUPLE = 30,
  TYPE_TAG_FUTURE = 31,
  TYPE_TAG_FINITE = 32,
  TYPE_TAG_OBJECT = 33,
  TYPE_TAG_SERVICE = 34,
  TYPE_TAG_BYTE_ARRAY = 35,
  TYPE_TAG_FUNCTION_POINTER = 36,
  TYPE_TAG_HANDLE = 37,
  TYPE_TAG_READONLY = 38,
  TYPE_TAG_SIGNED32_INT = 39,
  TYPE_TAG_SIGNED16_INT = 40,
  TYPE_TAG_SIGNED8_INT = 41,
  TYPE_TAG_UNSIGNED32_INT = 42,
  TYPE_TAG_UNSIGNED16_INT = 43,
  TYPE_TAG_UNSIGNED8_INT = 44,
  TYPE_TAG_CHAR_STRING = 45,
  TYPE_TAG_XML_ELEMENT = 46,
  TYPE_TAG_XML_PI = 47,
  TYPE_TAG_XML_COMMENT = 48,
  TYPE_TAG_XML_TEXT = 49,
  TYPE_TAG_NEVER = 50,
  TYPE_TAG_NULL_SET = 51,
  TYPE_TAG_PARAMETERIZED_TYPE = 52
};

enum VarKind {
  LOCAL_VAR_KIND = 1,
  ARG_VAR_KIND = 2,
  TEMP_VAR_KIND = 3,
  RETURN_VAR_KIND = 4,
  GLOBAL_VAR_KIND = 5,
  SELF_VAR_KIND = 6,
  CONSTANT_VAR_KIND = 7
};

enum VarScope { VAR_SCOPE_GLOBAL = 1, VAR_SCOPE_FUNCTION = 2 };

} // namespace nballerina

#endif //!__BALINSTRUCTIONKIND__H__